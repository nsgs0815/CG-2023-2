<!DOCTYPE html>
<html>

<head>
    <title>Primera escena con Three.js</title>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/stats.js/10/Stats.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.7.9/dat.gui.min.js"></script>

    <style>
        body {
            margin: 0;
            overfLow: hidden;
        }
    </style>
</head>

<body>
    <div id="Stats-salida"></div>
    <div id="WebGL-salida"></div>
    <script type="text/javascript">

        $(function () {
            var stats = initStats();
            var scene = new THREE.Scene();
            var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
            var renderer = new THREE.WebGLRenderer();
            renderer.setClearColor(new THREE.Color(0xEEEEEE));
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.shadowMapEnabled = true; //activar sombras en el render

            //ver ejes X,Y,Z
            var axes = new THREE.AxesHelper(20);
            scene.add(axes);

            // creamos el plano del suelo
            var planeGeometry = new THREE.PlaneGeometry(60, 20);
            var planeMaterial = new THREE.MeshBasicMaterial({ color: 0xCCCCCC });
            var plane = new THREE.Mesh(planeGeometry, planeMaterial);
            plane.receiveShadow = true; //el plano es el objeto q   ue recibe sombra


            // rotamos y posicionamos el plano
            plane.rotation.x = -0.5 * Math.PI;
            plane.position.x = 15;
            plane.position.y = 0;
            plane.position.z = 0;

            // añadimos el plano a la escena
            scene.add(plane);

            // creamos un cubo
            var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);
            var cubeMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000 }); //se cambia de MeshBasicMAterial a MeshLambertMaterial para usar el spotlight
            var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
            cube.castShadow = true; //el cubo es quien genera la sombra

            // posicionamos el cubo
            cube.position.x = -4;
            cube.position.y = 3;
            cube.position.z = 0;

            // añadimos el cubo a la escena
            scene.add(cube);

            // creamos una esfera
            var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
            var sphereMaterial = new THREE.MeshLambertMaterial({ color: 0x7777ff });
            var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
            sphere.castShadow = true; //la esfera es quien genera la sombra

            // posicionamos la esfera
            sphere.position.x = 20;
            sphere.position.y = 4;
            sphere.position.z = 2;

            // añadimos la esfera a la escena
            scene.add(sphere);

            // posiciona y apunta la camara al centro de la escena
            camera.position.x = -30;
            camera.position.y = 40;
            camera.position.z = 30;
            camera.lookAt(scene.position);

            //añadimos spotlight para las sombras
            const spotLight = new THREE.SpotLight(0xffffff);
            spotLight.position.set(-40, 60, -10);
            spotLight.castShadow = true;
            spotLight.shadow.mapSize.width = 1024;
            spotLight.shadow.mapSize.height = 1024;
            scene.add(spotLight);

            // añadir la salida de la renderizacion al elemento html
            $("#WebGL-salida").append(renderer.domElement);
            

            var step = 0;

            var controls=new function(){
                this.rotationSpeed = 0.02;
                this.bouncingSpeed = 0.03;
            }

            var gui = new dat.GUI();
            gui.add(controls,'rotationSpeed',0,0.5);
            gui.add(controls,'bouncingSpeed',0,0.5);

            render();
            //PARA ANIMAR
            function render() {
                stats.update();
                //renderizar la escena con requestAnimationFrame

                //------------FORMA  ANTERIOR---------------
                /*cube.rotation.x += 0.01;
                cube.rotation.y += 0.01;
                cube.rotation.z += 0.01;

                step += 0.04;
                sphere.position.x = 20 + (10 * (Math.cos(step)));
                sphere.position.y = 2 + (10 * (Math.abs(Math.sin(step))));*/

                cube.rotation.x += controls.rotationSpeed;
                cube.rotation.y += controls.rotationSpeed;
                cube.rotation.z += controls.rotationSpeed;

                step += controls.bouncingSpeed;
                sphere.position.x = 20 + (10 * (Math.cos(step)));
                sphere.position.y = 2 + (10 * (Math.abs(Math.sin(step))));

                requestAnimationFrame(render);
                renderer.render(scene, camera);
            }

            function initStats() {
                var stats = new Stats();
                stats.setMode(0); //0: fps, 1: ms

                stats.domElement.style.position = 'absolute';
                stats.domElement.style.left = '0px';
                stats.domElement.style.top = '0px';

                $("#Stats-salida").append(stats.domElement);
                return stats;
            }


            // renderizar la escena
            renderer.render(scene, camera);
        });


    </script>
</body>

</html>