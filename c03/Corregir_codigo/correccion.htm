<!DOCTYPE html>
<html>

<head>
    <title>Primera escena con Three.js</title>

    <!--<script type="text/javascript" src="three.js"></script>      ERROR #1: Libreria no referenciada   CORRECCION:  referenciar un link con la libreria de three.js-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

    <!--<script type="text/javascript" src="jquery-1.9.0.js"></script>  ERROR #2: Libreria no referenciada   CORRECCION:  referenciar un link con la libreria version minified de jquery-1.9.0.js-->
    <script src="https://code.jquery.com/jquery-1.9.0.min.js" integrity="sha256-f6DVw/U4x2+HjgEqw5BZf67Kq/5vudRZuRkljnbF344=" crossorigin="anonymous"></script>

    <style>
        body {
            /* configurar margin a 0 y overflow a hidden, para ocupar pantalla completa */
            margin: 0;
            overfLow: hidden;
        }
    </style>
</head>

<body>
    <div id="WebGL-salida"></div>
    <script type="text/javascript">

        // una vez que todo ha sido cargado, ejecutamos nuestro contenido Three.js.
        $(function () {

            // creamos una scene, que contendrá todos nuestros elementos, como objetos, cámaras y luces
            //ERROR#3: var scene THREE.Scene();     -->NO tiene el operador = y la palabra 'new' para indicar un nuevo objeto
            var scene = new THREE.Scene();

            // creamos una camera, que define desde donde vamos a mirar.
            var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);

            // creamos un render y configuramos el tamaño
            var renderer = new THREE.WebGLRenderer();

            //renderer.setClearColorHex(OxEEEEEE);  ERROR #4: codigo hexadecimal para el color mal escrito, 'setClearColorHex' no es una funcion
            renderer.setClearColor(new THREE.Color(0xEEEEEE) ); 
            renderer.setSize(window.innerWidth, window.innerHeight);

            //ver ejes X,Y,Z
            var axes = new THREE.AxisHelper(20);
            scene.add(axes);

            // creamos el plano del suelo
            var planeGeometry = new THREE.PlaneGeometry(60, 20);
            //var planeMaterial = new THREE.MeshBasicMaterial({ color: excccccc }); ERROR #5: codigo hexadecimal para el color mal escrito
            var planeMaterial = new THREE.MeshBasicMaterial({ color: 0xCCCCCC }); 
            var plane = new THREE.Mesh(planeGeometry, planeMaterial);


            // rotamos y posicionamos el plano
            plane.rotation.x = -0.5 * Math.PI;
            plane.position.x = 15; 
            plane.position.y = 0;
            plane.position.z = 0; 

            // añadimos el plano a la escena
            scene.add(plane);

            // creamos un cubo
            //var cubeGeometry = new THREE.CubeGeometry(4, 4, 4);   ERROR#6: CubeGeometry no es una función.En cambio es 'BoxGeometry'
            var cubeGeometry = new THREE.BoxGeometry(4, 4, 4); 
            //var cubeMaterial = new THREE.MesheasicMaterial((color: 0xff0000, wireframe: true));  ERROR #7:  el material está mal escrito, falta 'B'. Y parentesis mal usadas
            var cubeMaterial = new THREE.MeshBasicMaterial({color: 0xff0000, wireframe: true});
            var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

            // posicionamos el cubo
            cube.position.x = -4;
            cube.position.y = 3;
            cube.position.z = 0;

            // añadimos el cubo a la escena
            scene.add(cube);

            // creamos una esfera
            var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
            var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x7777ff, wireframe: true });
            //var sphere = THREE.Mesh(sphereGeometry, sphereMaterial); ERROR #8: NO tiene la palabra 'new' para indicar un nuevo objeto
            var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);

            // posicionamos la esfera
            sphere.position.x = 20;
            sphere.position.y = 4;
            sphere.position.z = 2;

            // añadimos la esfera a la escena
            scene.add(sphere);

            // posiciona y apunta la camara al centro de la escena
            camera.position.x = -30;
            camera.position.y = 40;
            camera.position.z = 30;
            camera.lookAt(scene.position);

            // añadir la salida de la renderizacion al elemento html
            $("#WebGL-salida").append(renderer.domElement);

            // renderizar la escena
            renderer.render(scene, camera);
        });


    </script>
</body>
</html>